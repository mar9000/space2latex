/*
 * Copyright 2016 Marco Lombardo
 * https://github.com/mar9000
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
delimiters "«","»"

document(d) ::= <<
% Generated by Space2Latex.
\documentclass[oneside,a4paper]{book}

% Load the url package and define the command \noclickurl used by TextElement to type set
% long java package names.
\usepackage{url}
\DeclareUrlCommand\noclickurl{}
% Now this package will override the \url command but not the \noclickurl command.
\usepackage{hyperref}
\hypersetup{%
  pdftitle=«d.title»,%
  pdfauthor=«d.author»,%
  colorlinks=true,%
  linkcolor=blue,%
  filecolor=magenta,%
  urlcolor=magenta%
}

% Small margins.
\usepackage[top=1.5cm, bottom=1.5cm, left=1.5cm, right=1.5cm]{geometry}

% Images.
\usepackage{graphicx}
% I use the "max width" macro in includegraphics to include graphic a little smaller than page width.
% "export" means to export macro definition to includegraphics.
\usepackage[export]{adjustbox}

% Used to typeset Info.
\usepackage{varwidth}
\usepackage{grffile}

% Used to implement span color, See Color().
\usepackage{color}

% For tables.
\usepackage{tabu}
\usepackage{longtable}

% Let "<" and ">" work as expected.
\usepackage[T1]{fontenc}
\usepackage{lmodern}

% Verbatim are saved in box than included.
\usepackage{fancyvrb}

% Used to implement line-through decoration, see St().
\usepackage{soul}

% Used to typeset item inside a table where itemize environment can't be used.
\usepackage{booktabs}
\newcommand{\tabitem}{~~\llap{\textbullet}~~}

% Use to typeset $\backslash$ without using "$" that would be escaped again, see TextElement.
\newcommand{\localBackslash}{$\backslash$}

% Used to typeset Info and Tip.
\usepackage[skins]{tcolorbox}
% Info.
\newtcolorbox{infocolorbox}[1][]{enhanced,
  boxrule=0.3pt,left=5mm,right=2mm,top=1mm,bottom=1mm,
  colback=yellow!10,
  colframe=yellow!20!black,
  arc=0mm,
  overlay={%
    \path[fill=yellow!50!black,draw=none] (interior.south west) rectangle node[white]{\Huge\bfseries i} ([xshift=4mm]interior.north west);
    },#1}
% Tip.
\newtcolorbox{tipcolorbox}[1][]{enhanced,
  boxrule=0.3pt,left=5mm,right=2mm,top=1mm,bottom=1mm,
  colback=green!10,
  colframe=green!20!black,
  arc=0mm,
  overlay={%
    \path[fill=green!50!black,draw=none] (interior.south west) rectangle node[white]{\Huge\bfseries !} ([xshift=4mm]interior.north west);
    },#1}
% Warning.
\newtcolorbox{warningcolorbox}[1][]{enhanced,
  boxrule=0.3pt,left=5mm,right=2mm,top=1mm,bottom=1mm,
  colback=red!10,
  colframe=red!20!black,
  arc=0mm,
  overlay={%
    \path[fill=red!50!black,draw=none] (interior.south west) rectangle node[white]{\Huge\bfseries !} ([xshift=4mm]interior.north west);
    },#1}
% Emoticons.
\newcommand{\emoticonsmile}{\includegraphics{../smile.pdf}}
\newcommand{\emoticonlight}{\includegraphics{../lightbulb_on.pdf}}
\newcommand{\emoticonwarning}{\tcbox[tcbox raise base,nobeforeafter,colback=red!5!white,colframe=red!75!black,valign=center,arc=2mm,top=.1mm,bottom=.1mm,left=.5mm,right=.5mm]{!}\hspace{.4em}}
\newcommand{\emoticoninformation}{\tcbox[tcbox raise base,nobeforeafter,colback=blue!5!white,colframe=blue!75!black,valign=center,arc=2mm,top=.1mm,bottom=.1mm,left=.5mm,right=.5mm]{i}\hspace{.4em}}
\newcommand{\emoticontip}{\tcbox[tcbox raise base,nobeforeafter,colback=green!5!white,colframe=green!75!black,valign=center,arc=2mm,top=.1mm,bottom=.1mm,left=.5mm,right=.5mm]{Tip}\hspace{.4em}}

% Default font to sans serif.
\renewcommand{\familydefault}{\sfdefault}

% Frontpage background.
\usepackage[pages=some]{background}
\backgroundsetup{
scale=1,
color=black,
opacity=0.9,
angle=0,
contents={%
  \makebox[0pt]{\includegraphics[width=\paperwidth,height=\paperheight]{../beam-1.pdf}}
  \raisebox{0.75\paperheight}[0pt][0pt]{\makebox[0pt]{\includegraphics[width=.75\paperwidth]{../mps-text.pdf}}}
  }%
}

% Used to make \hyperref robust because otherwise can't be used inside \section{} commands.
\usepackage{makerobust}
\MakeRobustCommand\hyperlink

% Front page data.
\title{«d.title»}
\author{«d.author»}
\date{«d.date»}

% I set parindent to 0 for two reasons: first to replicate HTML formatting that does not have parindent.
% Second because for the above reason authors do not care correctly about paragraph breaks.
% Visually the worst problem was that many short lines were indented reducing readability.
\setlength{\parindent}{0pt}

% ---------- Document.   ----------
\begin{document}

% Title page.
\BgThispage
\maketitle
\clearpage

% ---------- Verbatim definitions.   ----------

«d.verbatimDefs.verbatimDefs : verbatimDef(); separator="\n\n"»

% ---------- Parts.   ----------

«d.parts : documentPart(); separator="\n\n"»

% End.
\end{document}

>>

// --- Verbatim template.   ---
verbatimDef(v) ::= <<
% Verbatim «v.key» .
\begin{SaveVerbatim}{«v.key»}
«v.content»
\end{SaveVerbatim}
>>

// Looking at the wiki content I saw that 'structure-macro code', 'noformat' and 'pre' nodes are always
// displayed not inline. Inline content is rendered using the 'code' node.
// The following use of tcbox and before parameter achives the same behavior of an HTML page:
// even when the verbatim content is present without paragraph break the verbatim goes into the next line.
// Content that could follow the verbatim goes into the third line.
VerbatimUse(e) ::= <<
\tcbox[colframe=black!25!white,colback=black!1.5!white %
, before={\par\smallskip\parindent=0pt} %
,left=1mm,right=1mm,top=1mm,bottom=1mm,boxrule=0.5pt,arc=.3mm]{\BUseVerbatim{«e.key»}}
>>

// --- Part and chapter.   ---

// This will call the template named as the current class.
documentPart(dp) ::= <<
«dp:(dp.class.simpleName)()»
>>

TOC(toc) ::= <<
% TOC.
\tableofcontents
>>

Part(p) ::= <<
% Part: «p.title» .
\part{«p.title»}

«p.chapters:Chapter(); separator="\n\n"»

% End of part: «p.title» .
>>

Chapter(c) ::= <<
% Chapter from page: «c.title» .
«if(!c.inline)»\chapter{«c.latexTitle»}«else»% Each inline chapter declares its own label.
\hypertarget{inline-chapter-«c.title»}
\vskip 1in
{\Huge \textbf{«c.latexTitle»}}
\vskip .5in «endif»


«c.elements:element()»
% End of chapter from page: «c.title» .
>>

// This will call the template named as the current class.
element(e) ::= <<
«e:(e.class.simpleName)()»
>>

Section(s) ::= <<

\\«s.type»{«s.elements:element()»}

>>

Paragraph(e) ::= <<

% Paragraph start.
«e.elements:element()»
% Paragraph end.

>>

TextElement(e) ::= <<
«e.text»
>>

// --- Enumerate and itemize environment.   ---
Ol(e) ::= <<

\begin{enumerate}
  «e.elements:element(); separator="\n"»
\end{enumerate}

>>

Ul(e) ::= <<

\begin{itemize}
  «e.elements:element(); separator="\n"»
\end{itemize}

>>

// When using tabitem the elements are ended with a newline.
Li(e) ::= <<
«if(e.useTabItem)»~\newline\noindent\tabitem«else»\item«endif» «e.elements:element()»
>>

// Use "~" to avoid error "No line to ends here."
Newline(e) ::= <<
~\newline

>>

// --- Text formatting.   ---
Emph(e) ::= <<
\emph{«e.elements:element()»}
>>

Sub(s) ::= <<
\raisebox{-.4ex}{\scriptsize «s.elements:element()»}
>>

Sup(s) ::= <<
\raisebox{.4ex}{\scriptsize «s.elements:element()»}
>>

Color(c) ::= <<
{\color[RGB]{«c.r», «c.g», «c.b»} «c.elements:element()»}
>>

St(l) ::= <<
\st{«l.elements:element()»}
>>

Bold(e) ::= <<
\textbf{«e.elements:element()»}
>>

TextTT(e) ::= <<
\texttt{«e.elements:element()»}
>>

TextUnderline(e) ::= <<
\underline{«e.elements:element()»}
>>

Hx(h) ::= <<
{\\«h.fontSize» «h.elements:element()»}
>>

// --- Graphcs.   ---
Image(e) ::= <<
\tcbox[colframe=black!25!white,colback=white %
,nobeforeafter,left=0mm,right=0mm,top=0mm,bottom=0mm %
,boxrule=0.5pt,arc=1mm]{\includegraphics[max width=0.95\linewidth]{«e.filename»}}
>>

// --- Links and refs.   ---
Link(l) ::= <<
«if(l.label.defined)»\hyperlink{«l.label.labelString»}«else»\href{«d.baseUrl»/«d.space»/«l.label.htmlTitle»}«endif»{«e.elements:element()»}
>>

Href(e) ::= <<
\href{«e.url»}{«e.elements:element()»}
>>

Label(l) ::= <<
«if(!l.referenced)»% «endif»\hypertarget{«l.labelString»}{}«if(!l.referenced)»
«endif»
>>

// --- Table.   ---
Table(t) ::= <<

\begin{longtabu} {«t.preamble»}
  \hline
  «t.rows:Tr(); separator="\n\\hline\n"»
  \hline
\end{longtabu}

>>

Tr(r) ::= <<
«r.columns:Td(); separator=" & "»  \\\\
>>

Td(td) ::= <<
«td.elements:element()»
>>

// --- Info, tip and quote.   ---
Info(i) ::= <<

\begin{infocolorbox}
«i.elements:element()»
\end{infocolorbox}

>>

Blockquote(b) ::= <<

\begin{quote}
  «e.elements:element()»
\end{quote}

>>

Tip(t) ::= <<

\begin{tipcolorbox}
«t.elements:element()»
\end{tipcolorbox}

>>

Warning(w) ::= <<

\begin{warningcolorbox}
«w.elements:element()»
\end{warningcolorbox}

>>

// --- Other stuff.   ---
// Hrule is commented out because it seems to be used only before Next and Previous buttons.
Hrule(h) ::= <<

% \hrule

>>

Emoticon(e) ::= <<
\emoticon«e.typeString» 
>>
